import { useEffect, useState } from 'react';
import L from 'leaflet';
import 'leaflet/dist/leaflet.css'; // –í–∞–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å CSS!
import './style.css';

// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤–æ–¥—ã:
const waterSources = [
  {
    id: 1,
    lat: 49.965052400995425,
    lng: 31.10522143975114,
    name: '–ö–æ–ª–æ–¥–µ—Ü —É —à–∫–æ–ª—ã',
    image: 'https://example.com/well1.jpg',
  },
  { id: 2, lat: 50.46, lng: 30.53, name: '–†—É—á–µ–π –∑–∞ –ª–µ—Å–æ–º', image: 'https://example.com/well2.jpg' },
];

export const useWaterMarkers = mapInstance => {
  const [markers, setMarkers] = useState([]);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ mapInstance —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–º–µ–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ .current
    if (!mapInstance || !mapInstance.current) return;

    const map = mapInstance.current;

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –º–∞—Ä–∫–µ—Ä—ã
    markers.forEach(marker => {
      if (map && marker) {
        marker.remove(); // –∏–ª–∏ map.removeLayer(marker)
      }
    });

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ –º–∞—Ä–∫–µ—Ä—ã
    const newMarkers = waterSources.map(source => {
      const marker = L.marker([source.lat, source.lng], {
        icon: L.divIcon({
          html: `<div class="water-marker-inner">üíß</div>`,
          className: 'custom-water-marker',
          iconSize: [30, 30],
        }),
      }).bindPopup(
        `<b>${source.name}</b><br><img src="${source.image}" style="width: 100px;" alt=""/>`
      );

      if (map) marker.addTo(map);
      return marker;
    });

    setMarkers(newMarkers);

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      newMarkers.forEach(marker => {
        if (map && marker) {
          marker.remove(); // –∏–ª–∏ map.removeLayer(marker)
        }
      });
    };
  }, [mapInstance]); // –£–±–∏—Ä–∞–µ–º markers.length –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  return markers;
};
