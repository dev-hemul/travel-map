name: Notify team on PR events
on:
  pull_request:
    types: [opened, reopened, closed]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: üîµ Notify when PR opened or reopened
        if: ${{ github.event.action == 'opened' || github.event.action == 'reopened' }}
        run: |
          DESCRIPTION="${{ github.event.pull_request.body }}"
          if [ -n "$DESCRIPTION" ]; then
            DESC_TEXT=$(printf "*–û–ø–∏—Å:* %s\n" "$DESCRIPTION")
          else
            DESC_TEXT=""
          fi

          MESSAGE=$(cat <<EOF
          üîµ –ù–æ–≤–∏–π Pull Request –≤—ñ–¥ *${{ github.event.pull_request.user.login }}*

          *–ù–∞–∑–≤–∞:* ${{ github.event.pull_request.title }}
          *–ì—ñ–ª–∫–∞:* ${{ github.event.pull_request.head.ref }} ‚Üí ${{ github.event.pull_request.base.ref }}
          $DESC_TEXT
          üîó [–î–∏–≤–∏—Ç–∏—Å—å PR](${{ github.event.pull_request.html_url }})
          -----------------------------------------------------------
          üí° –ê —Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∏–≤ —Å–≤—ñ–π –∫–æ–¥ —ñ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á—ñ?)
          EOF
          )

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
            --data-urlencode "chat_id=${{ secrets.TG_CHAT_ID }}" \
            --data-urlencode "parse_mode=Markdown" \
            --data-urlencode "text=$MESSAGE"

      - name: üü¢ Notify when PR merged
        if: ${{ github.event.action == 'closed' && github.event.pull_request.merged == true }}
        run: |
          DESCRIPTION="${{ github.event.pull_request.body }}"
          if [ -n "$DESCRIPTION" ]; then
            DESC_TEXT="*–û–ø–∏—Å:* $DESCRIPTION\n"
          else
            DESC_TEXT=""
          fi

          MESSAGE=$(cat <<EOF
          üü¢ Pull Request *#${{ github.event.pull_request.number }}* –±—É–≤ –∑–ª–∏—Ç–∏–π –≤ –≥—ñ–ª–∫—É *${{ github.event.pull_request.base.ref }}*

          –ê–≤—Ç–æ—Ä: ${{ github.event.pull_request.user.login }}
          $DESC_TEXT
          üîó [–î–∏–≤–∏—Ç–∏—Å—å PR](${{ github.event.pull_request.html_url }})

          üëâ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ \`git pull\`!
          EOF
          )

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
            --data-urlencode "chat_id=${{ secrets.TG_CHAT_ID }}" \
            --data-urlencode "parse_mode=Markdown" \
            --data-urlencode "text=$MESSAGE"

      - name: üî¥ Notify when PR closed without merge (with review comment)
        if: ${{ github.event.action == 'closed' && github.event.pull_request.merged == false }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DESCRIPTION="${{ github.event.pull_request.body }}"
          if [ -n "$DESCRIPTION" ]; then
            DESC_TEXT="*–û–ø–∏—Å:* $DESCRIPTION\n"
          else
            DESC_TEXT=""
          fi

          REPO="${{ github.repository }}"
          OWNER="${REPO%%/*}"
          NAME="${REPO#*/}"
          NUMBER=${{ github.event.pull_request.number }}

          # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ PR (issue comment)
          LAST_COMMENT=$(gh api repos/$OWNER/$NAME/issues/$NUMBER/comments \
          --jq '[.[] | select(.body != "" and .body != "'"$DESCRIPTION"'")] | .[-1]')
          
          COMMENT_BODY=$(echo "$LAST_COMMENT" | jq -r '.body // empty')
          COMMENT_AUTHOR=$(echo "$LAST_COMMENT" | jq -r '.user.login // empty')

          # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã/–ø–µ—Ä–µ–Ω–æ—Å—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
          CLEAN_DESCRIPTION=$(echo "$DESCRIPTION" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          CLEAN_COMMENT=$(echo "$COMMENT_BODY" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')

          COMMENT_TEXT=""
          if [ -n "$COMMENT_BODY" ]; then
            COMMENT_TEXT=$(printf "üìù –ö–æ–º–µ–Ω—Ç–∞—Ä —Å–∫–∞—Å–æ–≤–∞–Ω–æ–≥–æ PR (–≤—ñ–¥ @%s):\n```\n%s\n```" "$COMMENT_AUTHOR" "$COMMENT_BODY")
          fi

          MESSAGE=$(cat <<EOF
          üî¥ Pull Request *#${NUMBER}* –±—É–≤ –∑–∞–∫—Ä–∏—Ç–∏–π –±–µ–∑ merge

          $COMMENT_TEXT
          üîó [–î–∏–≤–∏—Ç–∏—Å—å PR](${{ github.event.pull_request.html_url }})
          EOF
          )

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage" \
            --data-urlencode "chat_id=${{ secrets.TG_CHAT_ID }}" \
            --data-urlencode "parse_mode=Markdown" \
            --data-urlencode "text=$MESSAGE"